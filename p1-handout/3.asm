BITS 32

extern printf
extern scanf
extern atoi

section .data
    num   :    dd 1
    max   :    dd 1
    i     : dd 1
    t1    : dd 1
    t2    : dd 1

section .rodata
    out :    db "%d", 10, 0

section .text
    global main

    main:
        push ebp
        mov ebp, esp

        mov edi, DWORD [esp + 8]
        mov esi, DWORD [esp + 12]

        cmp edi, 2
        jl .final


        mov dword[num], edi
        mov dword[i], 1
        mov ebx, dword[i]
        mov ecx, [esi + 4 * ebx]

        push ecx
        call atoi
        mov dword[max], eax

        .loop:
            mov ebx, dword[i]
            mov ecx, [esi + 4 * ebx]

            push ecx
            call atoi
            mov edi, eax

            call fibo

            inc dword[i]

            mov ebx, dword[i]
            cmp ebx, dword[num]
            jl .loop

        .final:
            xor eax, eax
            leave
            ret


      fibo:               ; 0, 1, 1, 2, 3, 5, 8 ....

          push ebp
          mov ebp, esp
          mov dword[t1], 0
          mov dword[t2], 1

          cmp edi, 0
          jg .loop2

          push -1
          push out    ; negative
          call printf
          add esp, 4
          jmp .endfibo


          .loop2:   ; n = 5, 4, 3, 2, 1
                    ;     0, 1, 1, 2, 3

              dec edi
              cmp edi, 0
              jle .loopend
              mov ecx, dword[t2]  ;temp = t2, t2 = t2 + t1, t1 = temp
              mov eax, dword[t1]
              add dword[t2], eax
              mov dword[t1], ecx
              jmp .loop2

          .loopend:

          push dword[t1]
          push out
          call printf
          add esp, 4

      .endfibo:
      leave
      ret
