BITS 32

extern printf
extern scanf
extern atoi

section .data
    num   :    dd 1
    max   :    dd 1
    i     : dd 1

section .rodata
    out :    db "%d", 10, 0

section .text
    global main

    main:
        push ebp
        mov ebp, esp

        mov edi, DWORD [esp + 8]
        mov esi, DWORD [esp + 12]

        cmp edi, 2
        jl .final

      
        mov dword[num], edi
        mov dword[i], 1
        mov ebx, dword[i]
        mov ecx, [esi + 4 * ebx]

        push ecx
        call atoi
        mov dword[max], eax

        .loop:
            mov ebx, dword[i]
            mov ecx, [esi + 4 * ebx]

            push ecx
            call atoi
            mov ecx, eax

            cmp dword[max], ecx
            jge .cont
            mov dword[max], ecx

            .cont:
                inc dword[i]

                mov ebx, dword[i]
                cmp ebx, dword[num]
                jl .loop

        push dword[max]
        push out
        call printf

        .final:
            xor eax, eax
            leave
            ret
